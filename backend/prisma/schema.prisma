// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  engineType    = "binary"
  binaryTargets = ["native", "linux-musl-arm64-openssl-1.1.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

model Gender {
  id           Int      @id @default(autoincrement())
  name         String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  users        User[]
  usersToMatch User[]   @relation("genderToMatch")
}

model Country {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  users     User[]
}

model Interactions {
  id Int @id @default(autoincrement())

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name             String
  UserInteractions UserInteractions[]
}

model User {
  id          Int     @id @default(autoincrement())
  email       String  @unique
  name        String
  lastName    String
  age         Int
  description String?
  profileImg  String?

  interactionsTransmitter UserInteractions[] @relation("userTransmitter")
  interactionsReceiver    UserInteractions[] @relation("userReceiver")

  genderToMatch   Gender? @relation("genderToMatch", fields: [genderToMatchId], references: [id])
  genderToMatchId Int?

  gender                       Gender?                     @relation(fields: [genderId], references: [id])
  genderId                     Int?
  country                      Country?                    @relation(fields: [countryId], references: [id])
  countryId                    Int?
  createdAt                    DateTime                    @default(now())
  updatedAt                    DateTime                    @updatedAt
  UserDiscoveringPeopleHistory UserDiscoverPeopleHistory[] @relation("userDiscovering")
  UserDiscoveredPeopleHistory  UserDiscoverPeopleHistory[] @relation("userDiscovered")
}

model UserInteractions {
  id Int @id @default(autoincrement())

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userTransmitter   User? @relation("userTransmitter", fields: [userIdTransmitter], references: [id])
  userIdTransmitter Int?
  userReceiver      User? @relation("userReceiver", fields: [userIdReceiver], references: [id])
  userIdReceiver    Int?

  interaction   Interactions? @relation(fields: [interactionId], references: [id])
  interactionId Int?
}

model UserDiscoverPeopleHistory {
  id Int @id @default(autoincrement())

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userDiscovering   User? @relation("userDiscovering", fields: [userIdDiscovering], references: [id])
  userIdDiscovering Int?
  userDiscovered    User? @relation("userDiscovered", fields: [userIdDiscovered], references: [id])
  userIdDiscovered  Int?
}
